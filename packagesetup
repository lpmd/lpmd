#
#
#

name = lpmd
fullname = 'lpmd'
version = 0.7.0
author = 'GNM <gnm@gnm.cl>'
prefix = /usr/local
mainfirst = true

language c++

   ifdef intel
    compiler = mpiCC
    linker = mpiCC
    flags = -Wall -O3 -axSSE4.1 -parallel -diag-disable remark -finline-functions -DNDEBUG  -fPIC -I.
    ifdef openmp
     openmpflags = -openmp
    endif
   else
    compiler = mpiCC
    linker = mpiCC -fPIC
    flags = -g -Wall -O3 -ffast-math -funroll-all-loops -finline-functions -fPIC -std=gnu++98 -I.
    ifdef openmp
     openmpflags = -fopenmp
     endif
   endif

end

language c

   ifdef intel
    compiler = icc
   else
    compiler = gcc
   endif

   ifdef intel 
    flags = -Wall -O3 -std=c99 -fast -diag-disable remark -DNDEBUG -fPIC
   else 
    flags = -g -Wall -O3 -ffast-math -finline-functions -fPIC -std=c99
   endif

   ifdef intel
    linker = icc
   else
    linker = gcc
   endif

end

directory .

   binary lpmd-testing
      language = python
      sources = lpmd.py
      installpath = bin
   end

end

directory lphandler
   
   file ControlFile.py
      language = python
      sources = ControlFile.py
      ifdef prefix
       installpath = $(prefix)/lib/lphandler
      else
       installpath = $(PYTHONLIB)/lphandler
      endif
   end

   file QuickMode.py
      language = python
      sources = QuickMode.py
      ifdef prefix
       installpath = $(prefix)/lib/lphandler
      else
       installpath = $(PYTHONLIB)/lphandler
      endif
   end

   file __init__.py
      language = python
      sources = __init__.py
      ifdef prefix
       installpath = $(prefix)/lib/lphandler
      else
       installpath = $(PYTHONLIB)/lphandler
      endif
   end

end
