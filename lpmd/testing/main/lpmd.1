.TH "LPMD" "1" "0.5" "GNM" "LPMD User's Reference Manual"
.SH "NAME"
lpmd \- a modular molecular dynamics simulation code
.SH "SYNOPSIS"
.B lpmd
[\fI\-v\fR] [\fI\-o variable=value\fR,...] \fIcontrol\-file\fR
.br 
.B lpmd
\-p \fIplugin\-name\fR
.br 
.B lpmd
\-h
.SH "DESCRIPTION"
.PP 
\fBLPMD\fR, Las Palmeras Molecular Dynamics, is a modular molecular dynamics simulation package, 
based completely on plugins. 
The \fBlpmd\fR command is the simulator itself, it reads a \fIcontrol\-file\fR containing the 
description of the system being simulated and the parameters controlling the simulation.
If the \fB\-p\fR option is given, no simulation is performed. Instead, \fBlpmd\fR shows information
about the intended use, current version, capabilities and parameters supported of a given plugin module.
.TP 
\fB\-v\fR, \fB\-\-verbose\fR
increases the verbosity of the simulation output by one level
.TP 
\fB\-o\fR, \fB\-\-option\fR
replaces all instances of $(\fIvariable\fR) by \fIvalue\fR in the \fIcontrol\-file\fR before running
.TP 
\fB\-p\fR, \fB\-\-pluginhelp\fR
shows help about \fIplugin\-name\fR
.TP 
\fB\-h\fR, \fB\-\-help\fR
displays help and version information, and exits
.SH "CONTROL FILE FORMAT"
.PP 
The syntax of the control file format recognizes two kinds of elements, \fBone\-line statements\fR and \fBblocks\fR. 

.PP 
A one\-line statement has the structure:
.TP 
\fBstatement\fR [[\fIparameter\fR = ]\fIvalue\fR] [[\fIparameter\fR = ]\fIvalue\fR] [...]

.PP 
While a block has the following structure:
.TP 
\fBblock\-statement\fR \fIparameter\fR [OPTIONS]
.TP 
   \fIkeyword\fR \fIvalue\fR
.TP 
   \fIkeyword\fR \fIvalue\fR
   ...
.TP 
\fBend\-of\-block\-statement\fR
.SH "ONE-LINE STATEMENTS"
.PP 
Currently, the one\-line statements understood by \fBlpmd\fR are: \fBset\fR, \fBcell\fR, 
\fBinput\fR, \fBoutput\fR, \fBplugindir\fR, \fBinclude\fR, \fBperiodic\fR, \fBsteps\fR, \fBdumping\fR, \fBrestore\fR, \fBmonitor\fR, \fBcharge\fR, \fBprepare\fR, \fBatom\fR, \fBcellmanager\fR, \fBpotential\fR, \fBintegrator\fR, \fBproperty\fR, \fBapply\fR and \fBvisualize\fR.

.TP 
\fBset\fR \fIoption\-flag\fR \fIvalue\fR
.TP 
	sets the value of the global option \fIoption\-flag\fR to \fIvalue\fR  

.TP 
\fBcell\fR crystal \fIa\fR \fIb\fR \fIc\fR \fIalpha\fR \fIbeta\fR \fIgamma\fR
.TP 
	defines the geometry of the simulation cell using six crystallographic parameters

.TP 
\fBcell\fR vector \fIax\fR \fIay\fR \fIaz\fR \fIbx\fR \fIby\fR \fIbz\fR \fIcx\fR \fIcy\fR \fIcz\fR
.TP 
	defines the geometry of the simulation cell using three vectors, three components each

.TP 
\fBinput\fR \fImodule\fR \fIplugin\-option\-value\fR ... 
.TP 
	selects the plugin \fImodule\fR (which must be a CellGenerator plugin) for reading or constructing the initial positions (and optionally, velocities) of the atoms in the simulation cell. The parameters following \fImodule\fR are passed literally as options for the plugin

.TP 
\fBoutput\fR \fImodule\fR \fIplugin\-option\-value\fR ... 
.TP 
	selects the plugin \fImodule\fR (which must be a CellWriter plugin) for writing the positions (and optionally, velocities) of the atoms in the simulation cell during the run. The parameters following \fImodule\fR are passed literally as options for the plugin

.TP 
\fBplugindir\fR \fIdir\fR
.TP 
	adds the directory \fIdir\fR to the plugin search path, so any additional plugins in that directory can be recognized by \fBlpmd\fR and loaded in a simulation

.TP 
\fBinclude\fR \fIinputfile\fR
.TP 
	includes the contents of file \fIinputfile\fR in the control file

.TP 
\fBperiodic\fR \fIx\fR \fIy\fR \fIz\fR
.TP 
	enables or disables periodic boundary conditions on the given axis. By default periodicity is enabled on all three axes

.TP 
\fBsteps\fR \fIn\fR
.TP 
	indicates the number \fIn\fR of simulation steps to be performed

.TP 
\fBdumping\fR \fIeach\fR \fIdumpfile\fR
.TP 
	writes 'dump' information in \fIdumpfile\fR each \fIeach\fR steps, which then can be used to restart from the last saved point using the \fBrestore\fR statement. 

.TP 
\fBrestore\fR \fIdumpfile\fR
.TP 
	restarts the simulation from a 'dump' file (see the \fBdumping\fR statement above). This statement is mutually exclusive with \fBinput\fR, which starts a simulation from scratch

.TP 
\fBmonitor\fR \fIproperties\fR \fIstart\fR \fIend\fR \fIeach\fR
.TP 
	selects properties to be displayed during the simulation, starting at the step \fIstart\fR until \fIend\fR with intervals of \fIeach\fR steps. \fIproperties\fR is a comma\-separated list of named properties

.TP 
\fBcharge\fR \fIsymbol\fR \fIcharge\fR
.TP 
	sets the electric charge of the species with \fIsymbol\fR to \fIcharge\fR 

.TP 
\fBprepare\fR \fImodule\fR \fIplugin\-option\-value\fR ...
.TP 
	applies a SystemModifier plugin \fImodule\fR to the system before starting the simulation. For example, one to set the initial temperature of the system, or to rescale the simulation box. The parameters following \fImodule\fR are passed literally as options for the plugin

.TP 
\fBatom\fR \fItype\fR \fIfrom\fR \fIto\fR \fIstart\fR
.TP 
	assigns the AtomType \fItype\fR (previously defined in a \fBtype\fR block) to the range of atoms with index between (and including) \fIfrom\fR and \fIto\fR. This atom index goes from 0 to N\-1, N being the total number of atoms in the simulation cell. The AtomType is set starting from the simulation step \fIstart\fR, which defaults to 1

.TP 
\fBcellmanager\fR \fImodule\fR
.TP 
	uses the CellManager plugin \fImodule\fR for handling calculations of neighbor distances

.TP 
\fBpotential\fR \fImodule\fR \fIa\fR \fIb\fR
.TP 
	assigns the Potential plugin \fImodule\fR to handle the interaction between the species \fIa\fR and \fIb\fR (denoted by atomic symbols, such as Cu or Ar)

.TP 
\fBintegrator\fR \fImodule\fR \fIstart\fR
	assigns the Integrator plugin \fImodule\fR to handle the movement of the atoms in the system, i.e., integrating the equations of motion according to the forces

.TP 
\fBproperty\fR \fImodule\fR \fIstart\fR \fIend\fR \fIeach\fR
.TP 
	adds the InstantProperty plugin \fImodule\fR to the list of properties computed during the simulation. \fIstart\fR, \fIend\fR and \fIeach\fR control the range of simulation steps in which the property is computed 

.TP 
\fBapply\fR \fImodule\fR \fIstart\fR \fIend\fR \fIeach\fR
.TP 
	adds the SystemModifier plugin \fImodule\fR to the list of modifiers to be applied during the simulation. \fIstart\fR, \fIend\fR and \fIeach\fR control the range of simulation steps in which the modifier is applied

.TP 
\fBvisualize\fR \fImodule\fR \fIstart\fR \fIend\fR \fIeach\fR
.TP 
	adds the Visualizer plugin \fImodule\fR to the list of visualizers active during the simulation. \fIstart\fR, \fIend\fR and \fIeach\fR control the range of simulation steps in which the visualizer is enabled
.SH "BLOCK STATEMENTS"
.PP 
The block\-statements understood by \fBlpmd\fR are only two: \fBuse\fR, which loads a plugin and specifies its parameters, and \fBtype\fR, which defines a new AtomType that can be assigned to individual atoms to set different flags on them. 

.TP 
\fBuse\fR \fIplugin\fR [as \fIalias\fR]
.TP 
   \fIplugin\-option\fR \fIvalue\fR
.TP 
   \fIplugin\-option\fR \fIvalue\fR
.TP 
   ...
.TP 
\fBenduse\fR


.TP 
\fBtype\fR \fIatom\-type\fR
.TP 
   \fIatomtype\-flag\fR \fIvalue\fR
.TP 
   \fIatomtype\-flag\fR \fIvalue\fR
.TP 
   ...
.TP 
\fBendtype\fR
.SH "AUTHOR"
Grupo de Nanomateriales, 
.B http://www.gnm.cl/
.SH "REPORTING BUGS"
Report bugs to <lpmd@gnm.cl>.
.SH "COPYRIGHT"
Copyright \(co 2008 Free Software Foundation, Inc.
.br 
This is free software.  You may redistribute copies of it under the terms of
the GNU General Public License <http://www.gnu.org/licenses/gpl.html>.
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
lpmd\-analyzer(1), lpmd\-converter(1).
.br 
.br 
The user manual for
.B lpmd
is included as a PDF file together with the source packages.
You can also look up 
.B http://www.gnm.cl/lpmd/
for more information
